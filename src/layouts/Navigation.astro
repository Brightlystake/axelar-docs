---
import externalChainsMeta from '../pages/validator/external-chains/_meta.json'
import resourcesMeta from '../pages/resources/_meta.json'
import axelarJsSDKMeta from '../pages/dev/axelarjs-sdk/_meta.json'
import gasServicesMeta from '../pages/dev/general-message-passing/gas-services/_meta.json'
import debuggingMeta from '../pages/dev/general-message-passing/debug/_meta.json'
import validatorSetupMeta from '../pages/validator/setup/_meta.json'
import learnCliMeta from '../pages/learn/cli/_meta.json'
import sendTokensMeta from '../pages/dev/send-tokens/_meta.json'
import operationsMeta from '../pages/validator/operations/_meta.json'
import troubleshootMeta from '../pages/validator/troubleshoot/_meta.json'
import referenceMeta from '../pages/dev/reference/_meta.json'
import nodeMeta from '../pages/node/_meta.json'

const section = Astro.url.pathname?.match(/\/([^\/]*)\//)?.[1]
---

<div class="mobile nav-header">
  <a href="/dev/intro">Developers</a>
  <a href="/node/config-node">Node Operators</a>
  <a href="/validator/setup/overview">Validators</a>
  <hr />
</div>

{
  section == 'dev' && (
    <div>
      <div class="nav-header">Developers</div>
      <a href="/dev/intro">Introduction</a>
      <span>Send Tokens</span>
      <div class="group">
        {Object.keys(sendTokensMeta).map((sendToken) => (
          <a href={`/dev/send-tokens/${sendToken}`}>
            {sendTokensMeta[sendToken]}
          </a>
        ))}
      </div>
      <span>General Message Passing</span>
      <div class="group">
        <a href="/dev/general-message-passing/overview">Overview</a>
        <a href="/dev/general-message-passing/local-dev">Local Development</a>
        <a href="/dev/general-message-passing/examples">Examples</a>
        <a href="/dev/general-message-passing/gmp-messages">Send Messages</a>
        <a href="/dev/general-message-passing/gmp-tokens-with-messages">
          Send Messages with Tokens
        </a>
        <span>Gas Services</span>
        <div class="group">
          {Object.keys(gasServicesMeta).map((gasService) => (
            <a href={`/dev/general-message-passing/gas-services/${gasService}`}>
              {gasServicesMeta[gasService]}
            </a>
          ))}
        </div>
        <span>Debugging</span>
        <div class="group">
          {Object.keys(debuggingMeta).map((key) => (
            <a href={`/dev/general-message-passing/debug/${key}`}>
              {debuggingMeta[key]}
            </a>
          ))}
        </div>
        <a href="/dev/general-message-passing/recovery">Recovery</a>
        <a href="/dev/general-message-passing/monitoring">Monitoring</a>
        <a href="/dev/general-message-passing/solidity-utilities">
          Solidity Utilities
        </a>
        <a href="/dev/general-message-passing/axelar-sandbox/intro">Sandbox</a>
        <a href="/dev/general-message-passing/cosmos-gmp">Cosmos GMP</a>
        <a href="/dev/general-message-passing/example-usdc-cctp">USDC CCTP</a>
      </div>
      <span>AxelarJS SDK</span>
      <div class="group">
        {Object.keys(axelarJsSDKMeta).map((axlJs) => (
          <a href={`/dev/axelarjs-sdk/${axlJs}`}>
            {axelarJsSDKMeta[axlJs].title}
          </a>
        ))}
      </div>
      <span>Reference</span>
      <div class="group">
        {Object.keys(referenceMeta).map((reference) => (
          <a href={`/dev/reference/${reference}`}>{referenceMeta[reference]}</a>
        ))}
      </div>
    </div>
  )
}
{
  section == 'node' && (
    <div>
      <div class="nav-header">Node Operators</div>
      {Object.keys(nodeMeta)
        .filter((node) => typeof nodeMeta[node] !== 'object')
        .map((node) => (
          <a href={`/node/${node}`}>{nodeMeta[node]}</a>
        ))}
    </div>
  )
}
{
  section == 'learn' && (
    <div>
      <div class="nav-header">Learn</div>
    </div>
  )
}
{
  section == 'validator' && (
    <div>
      <div class="nav-header">Validators</div>
      <span>Setup</span>
      <div class="group">
        {Object.keys(validatorSetupMeta).map((validatorSetup) => (
          <a href={`/validator/setup/${validatorSetup}`}>
            {validatorSetupMeta[validatorSetup]}
          </a>
        ))}
      </div>
      <span>Support External Chains</span>
      <div class="group">
        {Object.keys(externalChainsMeta).map((chain) => (
          <a href={`/validator/external-chains/${chain}`}>
            {externalChainsMeta[chain]}
          </a>
        ))}
      </div>
      <span>Operations</span>
      <div class="group">
        {Object.keys(operationsMeta).map((operation) => (
          <a href={`/validator/operations/${operation}`}>
            {operationsMeta[operation]}
          </a>
        ))}
      </div>
      <span>Troubleshoot</span>
      <div class="group">
        {Object.keys(troubleshootMeta).map((troubleshoot) => (
          <a href={`/validator/troubleshoot/${troubleshoot}`}>
            {troubleshootMeta[troubleshoot]}
          </a>
        ))}
      </div>
    </div>
  )
}
{
  section == 'resources' && (
    <div>
      <div class="nav-header">Resources</div>
    </div>
  )
}
{
  !section && (
    <div>
      <div class="nav-header">Docs</div>
    </div>
  )
}
<div>
  {section != 'resources' && <span>Resources</span>}
  <div class="group">
    {
      Object.keys(resourcesMeta).map((resource) => (
        <a
          href={
            resource === 'governance'
              ? `/resources/governance/community-pool-proposals`
              : `/resources/${resource}`
          }
        >
          {resourcesMeta[resource]}
        </a>
      ))
    }
  </div>

  <span>Learn more about Axelar</span>
  <div class="group">
    <a href="/learn/network/flow">Crosschain Message Flow</a>
    <a href="/learn/axlusdc">axlUSDC</a>
    <a href="/learn/validators">Registering external chains for validators</a>
    <a href="/learn/security">Security Overview</a>
    <a href="/learn/txduration">Interchain Transaction Duration</a>

    <span>CLI</span>
    <div class="group">
      <a href="/learn/cli/">Introduction</a>
      {
        Object.keys(learnCliMeta).map((cli) => (
          <a href={`/learn/cli/${cli}`}>{learnCliMeta[cli]}</a>
        ))
      }
    </div>
  </div>
</div>
